// Component adapted from: https://mui.com/material-ui/react-table/#system-BasicTable.js
import React, { useState, useEffect, useRef } from "react";
// import { getAccessToken } from "@auth0/nextjs-auth0";
import { getAccessToken } from "@/components/DummyUser";
import Button from "@mui/material/Button";
import TableCell from "@mui/material/TableCell";
import TableRow from "@mui/material/TableRow";
import { User, getUser, emptyUser } from "@/API/User";

interface TableRowProps {
  hrefOrFunction: string | ((currinputModalEntry: User) => void);
  label: string;
}

function ResourcesMenu({ hrefOrFunction, label }: TableRowProps) {
  const [accessToken, setAccessToken] = useState("");
  let [currUser, setCurrUser] = useState<User>(emptyUser);
  const [userLoaded, setUserLoaded] = useState(false);
  const hasRun = useRef(false);

  useEffect(() => {
    if (!hasRun.current && typeof hrefOrFunction != "string") {
      const getData = async () => {
        try {
          if (accessToken == "") {
            const token = await getAccessToken();
            setAccessToken(token);
            const userData = await getUser(token);
            setCurrUser(userData);
            setUserLoaded(true);
          } else {
            const userData = await getUser(accessToken);
            setCurrUser(userData);
            setUserLoaded(true);
          }
        } catch (error) {
          console.log(error);
        }

        hasRun.current = true;
      };
      getData();
    }
  });

  //goes in body tag, per autogenerated index.html file in public folder
  if (typeof hrefOrFunction == "string") {
    return (
      <TableRow
        sx={{
          "&:last-child td, &:last-child th": { border: 0 },
          backgroundColor: "#f7fbf9",
        }}
      >
        <TableCell
          sx={{
            width: "100%",
            height: { xs: "4em", s: "4em", md: "6.5em", lg: "4em" },
            padding: "0px",
          }}
        >
          <Button
            style={{
              width: "100%",
              height: "100%",
              padding: ".5em 1.5em .5em 1.5em",
              textDecoration: "none",
              textAlign: "center",
              textTransform: "none",
            }}
            href={hrefOrFunction}
          >
            {label}
          </Button>
        </TableCell>
      </TableRow>
    );
  } else if (userLoaded) {
    return (
      <TableRow
        sx={{
          "&:last-child td, &:last-child th": { border: 0 },
          backgroundColor: "#f7fbf9",
        }}
      >
        <TableCell
          sx={{
            width: "100%",
            height: { xs: "4em", s: "4em", md: "6.5em", lg: "4em" },
            padding: "0px",
          }}
        >
          <Button
            style={{
              width: "100%",
              height: "100%",
              padding: ".5em 1.5em .5em 1.5em",
              textDecoration: "none",
              textAlign: "center",
              textTransform: "none",
            }}
            onClick={() => {
              hrefOrFunction(currUser);
            }}
          >
            {label}
          </Button>
        </TableCell>
      </TableRow>
    );
  }
}

export default ResourcesMenu;
